C M O O   T O D O
=================

compiler
--------
- finish the AST node set
- fix the remaining grammar problems (see XXX)
- dump_ast that looks less like code, more like the ast contents. graphviz?
- put location into AST
- variable scoping
- SSA and allocation of these
- determine last assignment of a variable in a branch of the tree
- phi ?
- asm generation helper functions
- code generation
- execute and check results
- move compiler into main dir and integrate

next main jobs
--------------
- store does not throw away changes on rollback of TX
- deadlock detector needs more tests and fixes
- currently you do not need to unlock a matching number of times when
  re-locking. this does not sound safe, but perhaps the store handles this?
- compiler should allow entry at top and at slot level
- logging from driver/core
- error handling in eval.c
- load objects from file
- arrays/hashes
-> towards "talker"

yakshaving
----------
- div/idiv/mod
- jump_eq, jump_ne, jump_le, jump_lt
- floats
- inc/dec calls for ints

non-code
--------
- better readme, and as markdown
- the overview diagram isn't quite correct anymore
- document vm evaluator and type system
- LANGUAGE needs to move into the manual and be people-centric rather than
  just BNF
- more general documentation
